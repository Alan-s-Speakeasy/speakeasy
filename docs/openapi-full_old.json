{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Alan's Speakeasy",
    "description" : "Full API for Alan's Speakeasy, Version 0.1",
<<<<<<< HEAD
=======
    "contact" : {
      "name" : "The Speakeasy Dev Team",
      "url" : "https://speakeasy.ifi.uzh.ch"
    },
    "license" : {
      "name" : "MIT"
    },
>>>>>>> dev
    "version" : "0.1"
  },
  "paths" : {
    "/api/assignment" : {
      "delete" : {
        "tags" : [ "Assignment" ],
        "summary" : "Delete the active assignment generator.",
<<<<<<< HEAD
=======
        "operationId" : "deleteApiAssignment",
>>>>>>> dev
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewAssignmentObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "get" : {
        "tags" : [ "Assignment" ],
        "summary" : "Get the status of the current assignment generator",
<<<<<<< HEAD
=======
        "operationId" : "getApiAssignment",
>>>>>>> dev
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssignmentGeneratorObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/assignment/new" : {
      "post" : {
        "tags" : [ "Assignment" ],
        "summary" : "Initialize a new assignment generator.",
<<<<<<< HEAD
=======
        "operationId" : "postApiAssignmentNew",
>>>>>>> dev
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/assignment/round" : {
      "patch" : {
        "tags" : [ "Assignment" ],
        "summary" : "Start the generated assignment round",
<<<<<<< HEAD
=======
        "operationId" : "patchApiAssignmentRound",
>>>>>>> dev
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoundStarted"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
<<<<<<< HEAD
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "Assignment" ],
        "summary" : "Generate a new assignment round",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewAssignmentObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
=======
>>>>>>> dev
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
<<<<<<< HEAD
      }
    },
    "/api/feedback" : {
      "get" : {
        "tags" : [ "Feedback" ],
        "summary" : "Gets the list of feedback requests for a Chatroom.",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
=======
      },
      "post" : {
        "tags" : [ "Assignment" ],
        "summary" : "Generate a new assignment round",
        "operationId" : "postApiAssignmentRound",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewAssignmentObject"
              }
            }
          },
          "required" : false
        },
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/FeedbackRequestList"
=======
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
>>>>>>> dev
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/feedback/{roomId}" : {
      "post" : {
        "tags" : [ "Feedback" ],
<<<<<<< HEAD
        "summary" : "Returns Feedback for a Chatroom.",
=======
        "summary" : "Posts Feedback for a Chatroom.",
        "operationId" : "postApiFeedbackByRoomId",
>>>>>>> dev
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeedbackResponseList"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
<<<<<<< HEAD
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
=======
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/feedbackaverage/{formName}" : {
      "get" : {
        "tags" : [ "Admin", "Feedback" ],
        "summary" : "Gets the list of feedback averages (both assigned and requested) per user",
        "operationId" : "getApiFeedbackaverageByFormName",
        "parameters" : [ {
          "name" : "formName",
          "in" : "path",
          "description" : "Name of the feedback form",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "author or recipient",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedbackResponseAverageMapList"
>>>>>>> dev
                }
              }
            }
          },
<<<<<<< HEAD
          "409" : {
            "description" : "Conflict",
=======
          "404" : {
            "description" : "Not Found",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/feedbackaverage" : {
      "get" : {
        "tags" : [ "Admin", "Feedback" ],
        "summary" : "Gets the list of feedback averages per user",
        "parameters" : [ {
          "name" : "author",
          "in" : "query",
          "description" : "author or recipient",
=======
    "/api/feedbackform/{formName}" : {
      "get" : {
        "tags" : [ "Feedback" ],
        "summary" : "Gets the feedback form (with form name and questions).",
        "operationId" : "getApiFeedbackformByFormName",
        "parameters" : [ {
          "name" : "formName",
          "in" : "path",
          "description" : "Name of the feedback form",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
>>>>>>> dev
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/FeedbackResponseAverageMapList"
=======
                  "$ref" : "#/components/schemas/FeedbackForm"
>>>>>>> dev
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
<<<<<<< HEAD
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/feedbackhistory" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Gets the list of feedback responses",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedbackResponseMapList"
                }
              }
            }
=======
>>>>>>> dev
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/feedbackhistory/{roomId}" : {
      "get" : {
        "tags" : [ "Feedback" ],
        "summary" : "Gets the list of feedback responses for a Chatroom.",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
=======
    "/api/feedbackforms" : {
      "get" : {
        "tags" : [ "Feedback" ],
        "summary" : "Gets the list of all feedback forms.",
        "operationId" : "getApiFeedbackforms",
        "parameters" : [ {
>>>>>>> dev
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/FeedbackResponseList"
=======
                  "$ref" : "#/components/schemas/FeedbackFormList"
>>>>>>> dev
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
<<<<<<< HEAD
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/group" : {
      "delete" : {
        "tags" : [ "Admin" ],
        "summary" : "Removes all existing groups.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/group/create" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Creates a group with existing, non-duplicate and at least one users.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGroupRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
=======
          },
          "404" : {
            "description" : "Not Found",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
<<<<<<< HEAD
          },
          "404" : {
            "description" : "Not Found",
=======
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/feedbackhistory/form/{formName}" : {
      "get" : {
        "tags" : [ "Admin", "Feedback" ],
        "summary" : "Gets two lists (assigned and requested) of feedback responses to this form",
        "operationId" : "getApiFeedbackhistoryFormByFormName",
        "parameters" : [ {
          "name" : "formName",
          "in" : "path",
          "description" : "Name of the feedback form",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedbackResponseMapList"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/group/list" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all groups with corresponding users.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupDetails"
                  }
                }
              }
            }
=======
    "/api/feedbackhistory/room/{roomId}" : {
      "get" : {
        "tags" : [ "Feedback" ],
        "summary" : "Gets the list of feedback responses for a Chatroom.",
        "operationId" : "getApiFeedbackhistoryRoomByRoomId",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
>>>>>>> dev
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/group/remove" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Deletes an existing group.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/SuccessStatus"
=======
                  "$ref" : "#/components/schemas/FeedbackResponseList"
>>>>>>> dev
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Sets roles for session based on user account and returns a session cookie.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequest"
              }
            }
          },
          "required" : false
        },
=======
    "/api/group" : {
      "delete" : {
        "tags" : [ "Admin", "Group" ],
        "summary" : "Removes all existing groups.",
        "operationId" : "deleteApiGroup",
        "parameters" : [ ],
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSessionDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
<<<<<<< HEAD
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/logout" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Clears all user roles of the current session.",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
=======
>>>>>>> dev
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/request/{roomId}" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Post a new user to a Chatroom.",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
=======
    "/api/group/create" : {
      "post" : {
        "tags" : [ "Admin", "Group" ],
        "summary" : "Creates a group with existing, non-duplicate and at least one users.",
        "operationId" : "postApiGroupCreate",
        "parameters" : [ ],
>>>>>>> dev
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
<<<<<<< HEAD
                "type" : "string"
=======
                "$ref" : "#/components/schemas/CreateGroupRequest"
>>>>>>> dev
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/room/{roomId}" : {
      "patch" : {
        "tags" : [ "Chat" ],
        "summary" : "Closes a Chatroom.",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
=======
    "/api/group/list" : {
      "get" : {
        "tags" : [ "Admin", "Group" ],
        "summary" : "Lists all groups with corresponding users.",
        "operationId" : "getApiGroupList",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/group/remove" : {
      "post" : {
        "tags" : [ "Admin", "Group" ],
        "summary" : "Deletes an existing group.",
        "operationId" : "postApiGroupRemove",
        "parameters" : [ ],
>>>>>>> dev
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
<<<<<<< HEAD
      },
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Post a message to a Chatroom.",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "private",
          "in" : "query",
          "description" : "Private Message",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isDisplayed",
          "in" : "query",
          "description" : "Displayed Message",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
=======
      }
    },
    "/api/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Sets roles for session based on user account and returns a session cookie.",
        "operationId" : "postApiLogin",
        "parameters" : [ ],
>>>>>>> dev
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
<<<<<<< HEAD
                "type" : "string"
=======
                "$ref" : "#/components/schemas/LoginRequest"
>>>>>>> dev
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSessionDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/logout" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Clears all user roles of the current session.",
        "operationId" : "getApiLogout",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/room/{roomId}/reaction" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Post a chat message reaction to a Chatroom.",
=======
    "/api/room/{roomId}" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Post a message to a Chatroom.",
        "operationId" : "postApiRoomByRoomId",
>>>>>>> dev
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
<<<<<<< HEAD
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChatMessageReaction"
=======
            "text/plain" : {
              "schema" : {
                "type" : "string"
>>>>>>> dev
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/room/{roomId}/{since}" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Get state and all messages for a chat room since a specified time",
=======
    "/api/room/{roomId}/reaction" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Post a chat message reaction to a Chatroom.",
        "operationId" : "postApiRoomByRoomIdReaction",
>>>>>>> dev
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
<<<<<<< HEAD
          "name" : "since",
          "in" : "path",
          "description" : "Timestamp for new messages",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
=======
>>>>>>> dev
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
<<<<<<< HEAD
=======
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChatMessageReaction"
              }
            }
          },
          "required" : false
        },
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/ChatRoomState"
=======
                  "$ref" : "#/components/schemas/SuccessStatus"
>>>>>>> dev
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/rooms" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Lists all Chatrooms for current user",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
=======
    "/api/room/{roomId}/{since}" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Get state and all messages for a chat room since a specified time",
        "operationId" : "getApiRoomByRoomIdBySince",
        "parameters" : [ {
          "name" : "roomId",
          "in" : "path",
          "description" : "Id of the Chatroom",
          "required" : true,
>>>>>>> dev
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
<<<<<<< HEAD
=======
          }
        }, {
          "name" : "since",
          "in" : "path",
          "description" : "Timestamp for new messages",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
>>>>>>> dev
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/ChatRoomList"
=======
                  "$ref" : "#/components/schemas/ChatRoomState"
>>>>>>> dev
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/rooms/active" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all active Chatrooms",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChatRoomAdminList"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/rooms/all" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all Chatrooms",
        "parameters" : [ ],
=======
    "/api/rooms" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Lists all Chatrooms for current user",
        "operationId" : "getApiRooms",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/ChatRoomAdminList"
=======
                  "$ref" : "#/components/schemas/ChatRoomList"
>>>>>>> dev
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/rooms/assessed" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Lists all assessed chatrooms for current user",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChatRoomList"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/rooms/request" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Creates a Chatroom with another user.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChatRequest"
              }
            }
          },
          "required" : false
        },
=======
    "/api/rooms/active" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all active Chatrooms",
        "operationId" : "getApiRoomsActive",
        "parameters" : [ ],
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChatRoomAdminList"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
<<<<<<< HEAD
          },
          "403" : {
            "description" : "Forbidden",
=======
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/rooms/all" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all Chatrooms",
        "operationId" : "getApiRoomsAll",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChatRoomAdminList"
                }
              }
            }
          },
<<<<<<< HEAD
          "404" : {
            "description" : "Not Found",
=======
          "401" : {
            "description" : "Unauthorized",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/user/add" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Adds a new user.",
=======
    "/api/rooms/assessed" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Lists all assessed chatrooms for current user (including chatrooms marked as no need for assessment)",
        "operationId" : "getApiRoomsAssessed",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChatRoomList"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/rooms/request" : {
      "post" : {
        "tags" : [ "Chat" ],
        "summary" : "Creates a Chatroom with another user.",
        "operationId" : "postApiRoomsRequest",
>>>>>>> dev
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
<<<<<<< HEAD
                "$ref" : "#/components/schemas/AddUserRequest"
=======
                "$ref" : "#/components/schemas/ChatRequest"
>>>>>>> dev
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/user/check" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Returns details for the current session.",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSessionDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
=======
    "/api/user/add" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Adds a new user.",
        "operationId" : "postApiUserAdd",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddUserRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
<<<<<<< HEAD
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/user/current" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Returns details for the current session.",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSessionDetails"
=======
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
>>>>>>> dev
                }
              }
            }
          },
<<<<<<< HEAD
          "401" : {
            "description" : "Unauthorized",
=======
          "409" : {
            "description" : "Conflict",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
<<<<<<< HEAD
    "/api/user/list" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all available users.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/user/password" : {
      "patch" : {
        "tags" : [ "User" ],
        "summary" : "Changes the password for a given user.",
=======
    "/api/user/current" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Returns details for the current session.",
        "operationId" : "getApiUserCurrent",
>>>>>>> dev
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
<<<<<<< HEAD
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordChangeRequest"
              }
            }
          },
          "required" : false
        },
=======
>>>>>>> dev
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
<<<<<<< HEAD
                  "$ref" : "#/components/schemas/SuccessStatus"
=======
                  "$ref" : "#/components/schemas/UserSessionDetails"
>>>>>>> dev
                }
              }
            }
          },
<<<<<<< HEAD
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
=======
>>>>>>> dev
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
<<<<<<< HEAD
      }
    },
    "/api/user/remove?force" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Removes an existing user.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "description" : "Ignore active user sessions.",
=======
      }
    },
    "/api/user/list" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all available users.",
        "operationId" : "getApiUserList",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/user/password" : {
      "patch" : {
        "tags" : [ "User" ],
        "summary" : "Changes the password for a given user.",
        "operationId" : "patchApiUserPassword",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
>>>>>>> dev
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
<<<<<<< HEAD
            "type" : "boolean"
=======
            "type" : "string"
>>>>>>> dev
          }
        } ],
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
<<<<<<< HEAD
                "type" : "string"
=======
                "$ref" : "#/components/schemas/PasswordChangeRequest"
>>>>>>> dev
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
<<<<<<< HEAD
=======
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
<<<<<<< HEAD
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/user/sessions" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all current user sessions.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
=======
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/user/remove" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Removes an existing user.",
        "operationId" : "postApiUserRemove",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "description" : "Ignore active user sessions.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
>>>>>>> dev
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserSessionDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
<<<<<<< HEAD
=======
      }
    },
    "/api/user/sessions" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all current user sessions.",
        "operationId" : "getApiUserSessions",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserSessionDetails"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
>>>>>>> dev
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      },
      "SuccessStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      },
      "AddUserRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "role" : {
            "$ref" : "#/components/schemas/UserRole"
          },
          "password" : {
            "type" : "string"
          }
        },
        "required" : [ "username", "role", "password" ]
      },
      "AssignmentGeneratorObject" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "humans" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
<<<<<<< HEAD
          },
          "bots" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "admins" : {
=======
          },
          "bots" : {
>>>>>>> dev
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
<<<<<<< HEAD
          "active" : {
=======
          "admins" : {
>>>>>>> dev
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
<<<<<<< HEAD
          "selected" : {
            "$ref" : "#/components/schemas/SelectedUsers"
          },
          "assignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeneratedAssignment"
            }
          },
          "prompts" : {
=======
          "active" : {
>>>>>>> dev
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
<<<<<<< HEAD
          "botsPerHuman" : {
            "type" : "integer",
            "format" : "int32"
          },
=======
          "selected" : {
            "$ref" : "#/components/schemas/SelectedUsers"
          },
          "assignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeneratedAssignment"
            }
          },
          "prompts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "formName" : {
            "type" : "string"
          },
          "botsPerHuman" : {
            "type" : "integer",
            "format" : "int32"
          },
>>>>>>> dev
          "duration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "round" : {
            "type" : "integer",
            "format" : "int32"
          },
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRoomAdminInfo"
            }
          }
        },
<<<<<<< HEAD
        "required" : [ "humans", "bots", "admins", "active", "selected", "assignments", "prompts", "botsPerHuman", "duration", "round", "remainingTime", "rooms" ]
      },
      "ChatRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "evaluation" : {
            "type" : "boolean"
          }
        },
        "required" : [ "username", "evaluation" ]
      },
      "ChatRoomAdminInfo" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
=======
        "required" : [ "humans", "bots", "admins", "active", "selected", "assignments", "prompts", "formName", "botsPerHuman", "duration", "round", "remainingTime", "rooms" ]
      },
      "ChatRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          }
        },
        "required" : [ "username" ]
      },
      "ChatRoomAdminInfo" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "assignment" : {
            "type" : "boolean"
          },
          "formRef" : {
            "type" : "string"
          },
>>>>>>> dev
          "uid" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRoomUserAdminInfo"
            }
          },
          "prompt" : {
            "type" : "string"
          },
          "markAsNoFeedback" : {
            "type" : "boolean"
          }
        },
<<<<<<< HEAD
        "required" : [ "uid", "remainingTime", "users", "prompt" ]
      },
      "ChatRoomAdminList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRoomAdminInfo"
            }
          }
        },
        "required" : [ "rooms" ]
      },
      "ChatRoomInfo" : {
=======
        "required" : [ "assignment", "formRef", "uid", "remainingTime", "users", "prompt", "markAsNoFeedback" ]
      },
      "ChatRoomAdminList" : {
>>>>>>> dev
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRoomAdminInfo"
            }
          }
        },
        "required" : [ "rooms" ]
      },
      "ChatRoomInfo" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "assignment" : {
            "type" : "boolean"
          },
          "formRef" : {
            "type" : "string"
          },
          "uid" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userAliases" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "alias" : {
            "type" : "string"
          },
          "prompt" : {
            "type" : "string"
          },
<<<<<<< HEAD
          "evaluation" : {
            "type" : "boolean"
          }
        },
        "required" : [ "uid", "remainingTime", "userAliases", "prompt", "evaluation" ]
=======
          "markAsNoFeedback" : {
            "type" : "boolean"
          }
        },
        "required" : [ "assignment", "formRef", "uid", "remainingTime", "userAliases", "prompt", "markAsNoFeedback" ]
>>>>>>> dev
      },
      "ChatRoomList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRoomInfo"
            }
          }
        },
        "required" : [ "rooms" ]
      },
      "ChatRoomState" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "info" : {
            "$ref" : "#/components/schemas/ChatRoomInfo"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestChatMessage"
            }
          },
          "reactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatMessageReaction"
            }
          }
        },
        "required" : [ "info", "messages", "reactions" ]
      },
      "ChatRoomUserAdminInfo" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "alias" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        },
        "required" : [ "alias", "username" ]
      },
      "CreateGroupRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "usernames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "name", "usernames" ]
      },
      "FeedbackAnswerOption" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "name", "value" ]
<<<<<<< HEAD
=======
      },
      "FeedbackForm" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "formName" : {
            "type" : "string"
          },
          "requests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackRequest"
            }
          }
        },
        "required" : [ "formName", "requests" ]
      },
      "FeedbackFormList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "forms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackForm"
            }
          }
        },
        "required" : [ "forms" ]
>>>>>>> dev
      },
      "FeedbackRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "shortname" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackAnswerOption"
            }
          }
        },
        "required" : [ "id", "type", "name", "shortname", "options" ]
      },
<<<<<<< HEAD
      "FeedbackRequestList" : {
=======
      "FeedbackResponse" : {
>>>>>>> dev
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "value" ]
      },
      "FeedbackResponseAverageItem" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponse"
            }
          }
        },
<<<<<<< HEAD
        "required" : [ "requests" ]
      },
      "FeedbackResponse" : {
=======
        "required" : [ "username", "count", "responses" ]
      },
      "FeedbackResponseAverageMapList" : {
>>>>>>> dev
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "assigned" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponseAverageItem"
            }
          },
          "requested" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponseAverageItem"
            }
          }
        },
<<<<<<< HEAD
        "required" : [ "id", "value" ]
      },
      "FeedbackResponseAverageItem" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponse"
            }
          }
        },
        "required" : [ "username", "count", "responses" ]
      },
      "FeedbackResponseAverageMapList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponseAverageItem"
            }
          }
        },
        "required" : [ "responses" ]
=======
        "required" : [ "assigned", "requested" ]
>>>>>>> dev
      },
      "FeedbackResponseItem" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "author" : {
            "type" : "string"
          },
          "recipient" : {
            "type" : "string"
          },
          "room" : {
            "type" : "string"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponse"
            }
          }
        },
        "required" : [ "author", "recipient", "room", "responses" ]
      },
      "FeedbackResponseList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponse"
            }
          }
        },
        "required" : [ "responses" ]
      },
      "FeedbackResponseMapList" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "assigned" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponseItem"
            }
          },
          "requested" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackResponseItem"
            }
          }
        },
<<<<<<< HEAD
        "required" : [ "responses" ]
=======
        "required" : [ "assigned", "requested" ]
>>>>>>> dev
      },
      "GeneratedAssignment" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "human" : {
            "type" : "string"
          },
          "bot" : {
            "type" : "string"
          },
          "prompt" : {
            "type" : "string"
<<<<<<< HEAD
          }
        },
        "required" : [ "human", "bot", "prompt" ]
=======
          },
          "formName" : {
            "type" : "string"
          }
        },
        "required" : [ "human", "bot", "prompt", "formName" ]
>>>>>>> dev
      },
      "LoginRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "required" : [ "username", "password" ]
      },
      "NewAssignmentObject" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "humans" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bots" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "admins" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prompts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "botsPerHuman" : {
            "type" : "integer",
            "format" : "int32"
<<<<<<< HEAD
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "humans", "bots", "admins", "prompts", "botsPerHuman", "duration" ]
      },
      "PasswordChangeRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "currentPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          }
        },
        "required" : [ "currentPassword", "newPassword" ]
      },
      "RoundStarted" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "remainingTime" ]
      },
      "SelectedUsers" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "humans" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bots" : {
=======
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "formName" : {
            "type" : "string"
          }
        },
        "required" : [ "humans", "bots", "admins", "prompts", "botsPerHuman", "duration", "formName" ]
      },
      "PasswordChangeRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "currentPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          }
        },
        "required" : [ "currentPassword", "newPassword" ]
      },
      "RoundStarted" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "remainingTime" ]
      },
      "SelectedUsers" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "humans" : {
>>>>>>> dev
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
<<<<<<< HEAD
          "admins" : {
=======
          "bots" : {
>>>>>>> dev
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "humans", "bots", "admins" ]
      },
      "ChatMessageReaction" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "messageOrdinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChatMessageReactionType"
          }
        },
        "required" : [ "messageOrdinal", "type" ]
      },
      "ChatMessageReactionType" : {
        "type" : "string",
        "enum" : [ "THUMBS_UP", "THUMBS_DOWN", "STAR" ]
      },
      "RestChatMessage" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "timeStamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "authorAlias" : {
            "type" : "string"
          },
<<<<<<< HEAD
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "private" : {
            "type" : "boolean"
          },
          "read" : {
            "type" : "boolean"
          },
          "displayed" : {
            "type" : "boolean"
          }
        },
        "required" : [ "timeStamp", "authorAlias", "ordinal", "message", "private", "read", "displayed" ]
=======
          "admins" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "humans", "bots", "admins" ]
      },
      "ChatMessageReaction" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "messageOrdinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChatMessageReactionType"
          }
        },
        "required" : [ "messageOrdinal", "type" ]
      },
      "ChatMessageReactionType" : {
        "type" : "string",
        "enum" : [ "THUMBS_UP", "THUMBS_DOWN", "STAR" ]
      },
      "RestChatMessage" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "timeStamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "authorAlias" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "timeStamp", "authorAlias", "ordinal", "message" ]
>>>>>>> dev
      },
      "GroupDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDetails"
            }
          }
        },
        "required" : [ "id", "name", "users" ]
      },
      "UserDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "role" : {
            "$ref" : "#/components/schemas/UserRole"
          }
        },
        "required" : [ "id", "username", "role" ]
      },
      "UserRole" : {
        "type" : "string",
<<<<<<< HEAD
        "enum" : [ "HUMAN", "BOT", "ADMIN", "EVALUATOR" ]
=======
        "enum" : [ "HUMAN", "BOT", "ADMIN" ]
>>>>>>> dev
      },
      "UserSessionDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "userDetails" : {
            "$ref" : "#/components/schemas/UserDetails"
          },
          "sessionToken" : {
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "userDetails", "sessionToken", "sessionId", "startTime" ]
<<<<<<< HEAD
      }
    },
    "securitySchemes" : { }
=======
      }
    },
    "securitySchemes" : {
      "CookieAuth" : {
        "in" : "cookie",
        "name" : "SESSIONID",
        "type" : "apiKey"
      }
    }
>>>>>>> dev
  },
  "servers" : [ ],
  "security" : [ ]
}